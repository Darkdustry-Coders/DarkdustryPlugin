package darkdustry.features;

import arc.func.Func;
import mindustry.gen.*;
import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.entities.emoji.Emoji;
import net.dv8tion.jda.api.events.interaction.component.GenericComponentInteractionCreateEvent;
import net.dv8tion.jda.api.interactions.components.selections.SelectMenu;

import static darkdustry.PluginVars.loginWaiting;
import static darkdustry.components.Bundle.bundled;
import static darkdustry.discord.Bot.*;
import static mindustry.Vars.netServer;

public class Authme {

    public static final SelectMenu menu = SelectMenu.create("authme")
            .addOption("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "authme.confirm", "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–ø—Ä–æ—Å.", Emoji.fromFormatted("‚úÖ"))
            .addOption("–û—Ç–∫–ª–æ–Ω–∏—Ç—å", "authme.deny", "–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.", Emoji.fromFormatted("‚ùå"))
            .addOption("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "authme.info", "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–æ–∫–µ.", Emoji.fromFormatted("üîé"))
            .setPlaceholder("–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ...").build();

    public static void confirm(GenericComponentInteractionCreateEvent event) {
        remove(event, player -> {
            netServer.admins.adminPlayer(player.uuid(), player.usid());
            player.admin(true);

            bundled(player, "commands.login.confirm");
            return success("–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω");
        });
    }

    public static void deny(GenericComponentInteractionCreateEvent event) {
        remove(event, player -> {
            bundled(player, "commands.login.deny");
            return error("–ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω");
        });
    }

    public static void information(GenericComponentInteractionCreateEvent event) {
        String uuid = loginWaiting.get(event.getMessage());
        var info = netServer.admins.getInfo(uuid);

        EmbedBuilder embed = info("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ")
                .addField("–ù–∏–∫–Ω–µ–π–º:", info.lastName, true)
                .addField("UUID:", info.id, true)
                .addField("IP –∞–¥—Ä–µ—Å:", info.lastIP, true)
                .addField("–ó–∞—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", info.timesJoined + " —Ä–∞–∑", true)
                .addField("–í—ã–≥–Ω–∞–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞:", info.timesKicked + " —Ä–∞–∑", true)
                .addField("–í—Å–µ –Ω–∏–∫–Ω–µ–π–º—ã:", info.names.toString(), true)
                .addField("–í—Å–µ IP –∞–¥—Ä–µ—Å–∞", info.ips.toString(), true);

        event.replyEmbeds(embed.build()).setEphemeral(true).queue();
    }

    private static void remove(GenericComponentInteractionCreateEvent event, Func<Player, EmbedBuilder> func) {
        String uuid = loginWaiting.remove(event.getMessage());
        var player = Groups.player.find(p -> p.uuid().equals(uuid));

        if (player != null) event.getChannel().sendMessageEmbeds(func.get(player)
                .addField("–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:", event.getUser().getAsMention(), true)
                .addField("–ò–≥—Ä–æ–∫:", player.name, true).build()).queue();

        event.getMessage().delete().queue();
    }
}
